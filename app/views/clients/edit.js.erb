var $client_form = $('#client-form');
if ($client_form.length <= 0) {
  $client_form = $('<div class="modal" id="client-form"></div>').appendTo($('body'))  
}
$client_form.html("<%= escape_javascript(render partial: 'form') %>").on('hidden', function(e) { $(this).remove(); } ).modal();

$('.currency input').on('keydown', function(e){
  var getPos = function(o){
    if (o.createTextRange)
    {
      var r = document.selection.createRange().duplicate();
      r.moveEnd('character', o.value.length);
      if (r.text === '') { return o.value.length; }
      return o.value.lastIndexOf(r.text);
    } else { return o.selectionStart; }
  }
    var code = (e.keyCode ? e.keyCode : e.which);
    var typed = String.fromCharCode(code);
    var functional = false;
    var parse = false;
    var str = $(this).val();
    var allowNegative = true;
    var $this = $(this);

    console.log(str);
    console.log(code)
    console.log(getPos(this))

    // check Backspace, Tab, Enter, Delete, and left/right arrows
    if (code ==  8) functional = true;
    if (code ==  9) functional = true;
    if (code == 13) functional = true;
    if (code == 46) functional = true;
    if (code == 37) functional = true;
    if (code == 39) functional = true;

    console.log(e.metaKey)
    if(((e.ctrlKey || e.metaKey) && code == 97 /* firefox */) || ((e.ctrlKey || e.metaKey) && code == 65) /* opera */) { functional = true }
    // allow Ctrl+X (cut)
    if(((e.ctrlKey || e.metaKey) && code == 120 /* firefox */) || ((e.ctrlKey || e.metaKey) && code == 88) /* opera */) { functional = true }
    // allow Ctrl+C (copy)
    if(((e.ctrlKey || e.metaKey) && code == 99 /* firefox */) || ((e.ctrlKey || e.metaKey) && code == 67) /* opera */) { functional = true }
    // allow Ctrl+Z (undo)
    if(((e.ctrlKey || e.metaKey) && code == 122 /* firefox */) || ((e.ctrlKey || e.metaKey) && code == 90) /* opera */) { functional = true }
    // allow or deny Ctrl+V (paste), Shift+Ins
    if(((e.ctrlKey || e.metaKey) && code == 118 /* firefox */) || ((e.ctrlKey || e.metaKey) && code == 86) /* opera */ ||
      (e.shiftKey && code == 45)) { functional = true;  parse = true; }

    if (code == 188 && str.indexOf(",") == -1) functional = true; // virgola

    if (allowNegative && (code == 189 || code == 109) && getPos(this) == 0) functional = true; // dash as well

    // allow key numbers, 0 to 9
    if((code >= 48 && code <= 57) || (code >= 96 && code <= 105)) {
      functional = true;
      if (getPos(this) == 0 && str.indexOf("-") != -1)
        functional = false
      if (str.split(",").length > 1 && getPos(this) > str.indexOf(",")) {
        if (str.split(",")[1].length > 1)
          functional = false;
      }

    };

    if (!functional)
    {
      e.preventDefault();
      e.stopPropagation();
      return false;
    }
    if (parse){

      $this.data('parse', true)
      
    }
}).on("keyup", function(e){
  if ($(this).data("parse")){
    console.log("parse")
    var str = $(this).val();
    if (str.length == 0)
      str = "0"

    console.log('oip   ' + str);

    var p = parseFloat(str.replace(/,/,".")).toFixed(2)
    if (isNaN(p))
      p = ""
    $(this).val(p.replace(/\./,","))          

    $(this).data("parse", null)
  }
  
}).on('focusout', function(e){
  var $this = $(this);
  var str = $(this).val();

  if (str.length == 0)
    str = "0"

  var p = parseFloat(str.replace(/,/,".")).toFixed(2)

  console.log(p)

  if (isNaN(p))
    p = ""

  console.log(p)

  $this.val(p.replace(/\./,","))
  
});